@use "shared";

.container {
    flex: 1;
    padding: 1rem;

    background-color: shared.$primaryLighter1;
    border-radius: 1rem;

    display: flex;
}

.innerContainer {
    flex: 1;
    padding: 0.5rem 2.75rem;

    border-radius: 0.5rem;
    background-color: shared.$primaryDarker1;

    display: flex;
    flex-direction: column;
    align-items: center;
}

.timerContainer {
    width: 100%;
    height: 2.75rem;
    margin-bottom: 1.5rem;

    display: flex;
    justify-content: center;
}

.stopwatch {
    width: 7rem;
    height: 100%;
    padding-left: 1.125rem;

    background-color: shared.$white;
    border-radius: 3rem;
    @include shared.boxShadow(shared.$primary);

    color: shared.$primary;
    font-weight: bold;
    font-size: 1.25rem;

    display: flex;
    align-items: center;
    gap: 0.75rem;

    svg {
        height: 17px;
        fill: currentColor;

        &.timeAlmostUp {
            animation: pulse 1s infinite;

            @keyframes pulse {
                0%,
                100% {
                    transform: scale(1);
                    fill: currentColor;
                }
                50% {
                    transform: scale(1.75);
                    fill: shared.$red;
                }
            }
        }
    }
}

.countdownBar {
    height: 0.625rem;
    width: 30%;
    margin-top: 1.5rem;

    border-radius: 0.15rem;
    overflow: hidden;
    background-color: shared.$primaryLighter1;

    &__fill {
        @include shared.progressBarFill;

        animation: deplete var(--timeRemainingMs, 5000ms) linear both,
            progressBarFillAnim 1s linear infinite;

        @keyframes deplete {
            from {
                width: var(--timeRemainingPercentage, 100%);
            }
            to {
                width: 0%;
            }
        }
    }
}

.question {
    max-width: 35rem;
    margin-bottom: 2rem;
    text-align: center;
    color: shared.$white;
}

.options {
    width: 100%;
    margin-bottom: 2rem;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    row-gap: 1.5rem;
    column-gap: 2rem;

    &__hidden {
        filter: blur(0.375rem);
    }
}

.optionButton {
    height: 3.5rem;

    background-color: shared.$primaryLighter5;
    border: none;
    border: 5px solid transparent;
    border-radius: shared.$borderRadius;

    color: shared.$primary;
    font-size: 1.25rem;

    @media (hover: hover) {
        &:hover:enabled:not(.selected) {
            background-color: shared.$primaryLighter3;
        }
    }

    &.selected {
        border-color: shared.$accent;
        background-color: shared.$primaryLighter2;
        color: shared.$white;

        &.correctlySelected {
            border-color: shared.$green;
        }
        &.incorrectlySelected {
            border-color: shared.$red;
        }
    }
    &.incorrectlyUnselected {
        border-color: shared.$red;
        background-color: shared.$greenLighter1;
    }
}

.bigButton {
    height: 52px;
    width: 62.5%;

    color: shared.$primary;
    border: none;
    border-radius: shared.$borderRadius;

    &__white {
        background-color: shared.$white;
        @include shared.boxShadow(shared.$grayLighter1);

        @media (hover: hover) {
            &:hover:enabled {
                background-color: shared.$primaryLighter5;
                @include shared.boxShadow(shared.$primaryLighter3);
            }
        }
    }

    &__yellow {
        background-color: shared.$accent;
        @include shared.boxShadow(shared.$accentDarker1);

        @media (hover: hover) {
            &:hover:enabled {
                background-color: #ffeb4e;
            }
        }
    }

    &:disabled {
        background-color: shared.$grayLighter1;
        @include shared.boxShadow(shared.$gray);
    }
}

.bigButton + .bigButton {
    margin-top: 1rem;
}
